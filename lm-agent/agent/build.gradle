plugins {
    id("com.github.johnrengelman.shadow") version "6.0.0"
}

apply from: "$rootDir/gradle/shadow.gradle"

def relocatePackages = ext.relocatePackages

configurations {
    customShadow
}

dependencies {
    customShadow project(path: ":lm-agent:custom", configuration: "shadow")
    customShadow project(path: ":lm-agent:instrumentation", configuration: "shadow")
    implementation "io.opentelemetry.javaagent:opentelemetry-javaagent:${versions.opentelemetryJavaagent}:all"
}

CopySpec isolateSpec() {
    return copySpec {
        configurations.customShadow.files.each {
            from(zipTree(it)) {
                into("inst")
                rename("(^.*)\\.class\$", "\$1.classdata")
            }
        }
    }
}


tasks {
    shadowJar {
        dependsOn ':lm-agent:custom:shadowJar'
        dependsOn ':lm-agent:instrumentation:shadowJar'
        with isolateSpec()

        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        mergeServiceFiles {
            include("inst/META-INF/services/*")
        }
        processResources
        exclude("**/module-info.class")
        exclude("**/META-INF/*.DSA")
        exclude("**/META-INF/*.SF")
        processResources
        relocatePackages(it)

        manifest {
            attributes.put("Main-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
            attributes.put("Agent-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
            attributes.put("Premain-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
            attributes.put("Can-Redefine-Classes", "true")
            attributes.put("Can-Retransform-Classes", "true")
            attributes.put("Implementation-Vendor", "LogicMonitor")
            attributes.put("Implementation-Version", "logicmonitor-${project.version}-otel-${versions.opentelemetryJavaagent}")
        }

        archiveBaseName ="lm-agent"
    }

    assemble {
        dependsOn(shadowJar)
    }
    processResources {
        from(rootProject.file("LICENSE")) {
            into("META-INF/")
        }
    }
}
